\documentclass{article}
\usepackage[left=0.75in,top=0.65in,right=0.75in,bottom=0.55in]{geometry}

\begin{document}

<<include=FALSE>>=
library(knitr)
opts_chunk$set(
concordance=TRUE
)
@

\title{Calculation of processing and overprocessing}
\date{}
\maketitle

<<echo=FALSE, results='hide'>>=
library(ggplot2)
library(reshape)
 opts_knit$set(root.dir = "output/")
@

\section{For Bondora log}
<< >>=
print(getwd())
filenames <- list.files()[grep(paste("^output_bondora(?=.*\\_under.csv)",sep=''), list.files(), perl=TRUE)]
dat = c()
result = matrix(0,nrow = length(filenames),ncol = 6)
colnames(result) = c("nr_checks_our","nr_checks_Wil","nr_checks_rand",
                     "overproc_our","overproc_Wil","overproc_rand")

for (i in 1:length(filenames)) {
  foo = read.table(filenames[i],sep=",",header=TRUE)
  dat = rbind(dat,foo)
  result[i,1] = mean(foo$nr_checks_our)
  result[i,2] = mean(foo$nr_checks_Wil)
  result[i,3] = mean(foo$nr_checks_rand)
  result[i,4] = mean(foo$nr_checks_our - foo$minimum_check_number)
  result[i,5] = mean(foo$nr_checks_Wil - foo$minimum_check_number)
  result[i,6] = mean(foo$nr_checks_rand - foo$minimum_check_number)
}
@

Average number of checks that one would do if they follow \textbf{our ordering}:

<<>>=
round(mean(result[,1]),digits = 4)
@

Average number of checks that one would do if they apply \textbf{Wil's method} (constant reject probabilities):

<<>>=
round(mean(result[,2]),digits = 4)
@

Average number of checks that one would do if for every case they do checks in \textbf{random order}

<<>>=
round(mean(result[,3]),digits = 4)
@

Average \textbf{overprocessing} - our method

<<>>=
round(mean(result[,4]),digits = 4)
@

Average \textbf{overprocessing} - Wil method

<<>>=
round(mean(result[,5]),digits = 4)
@

Average \textbf{overprocessing} - random ordering

<<>>=
round(mean(result[,6]),digits = 4)
@

\paragraph{Distribution of overprocessing}

<<>>=
tt = matrix(0,nrow = 3,ncol = length(unique(dat$nr_checks_rand)))
rownames(tt) = c("count_checks_our","count_checks_Wil","count_checks_rand")
tt[1,] = round(table(dat$nr_checks_our)/length(filenames))
tt[2,] = round(table(dat$nr_checks_Wil)/length(filenames))
tt[3,] = round(table(dat$nr_checks_rand)/length(filenames))
colnames(tt) = names(table(dat$nr_checks_rand))
print(tt)
@


\section{For Environmental permit log}
<< >>=
filenames <- list.files()[grep(paste("^output_envpermit(?=.*\\_under.csv)",sep=''), list.files(), perl=TRUE)]
dat = c()
result = matrix(0,nrow = length(filenames),ncol = 6)
colnames(result) = c("nr_checks_our","nr_checks_Wil","nr_checks_rand",
                     "overproc_our","overproc_Wil","overproc_rand")

for (i in 1:length(filenames)) {
  foo = read.table(filenames[i],sep=",",header=TRUE)
  dat = rbind(dat,foo)
  result[i,1] = mean(foo$nr_checks_our)
  result[i,2] = mean(foo$nr_checks_Wil)
  result[i,3] = mean(foo$nr_checks_rand)
  result[i,4] = mean(foo$nr_checks_our - foo$minimum_check_number)
  result[i,5] = mean(foo$nr_checks_Wil - foo$minimum_check_number)
  result[i,6] = mean(foo$nr_checks_rand - foo$minimum_check_number)
}
@

Average number of checks that one would do if they follow \textbf{our ordering}:

<<>>=
round(mean(result[,1]),digits = 4)
@

Average number of checks that one would do if they apply \textbf{Wil's method} (constant reject probabilities):

<<>>=
round(mean(result[,2]),digits = 4)
@

Average number of checks that one would do if for every case they do checks in \textbf{random order}

<<>>=
round(mean(result[,3]),digits = 4)
@

Average \textbf{overprocessing} - our method

<<>>=
round(mean(result[,4]),digits = 4)
@

Average \textbf{overprocessing} - Wil method

<<>>=
round(mean(result[,5]),digits = 4)
@

Average \textbf{overprocessing} - random ordering

<<>>=
round(mean(result[,6]),digits = 4)
@

\paragraph{Distribution of overprocessing}

<<>>=
tt = matrix(0,nrow = 3,ncol = length(unique(dat$nr_checks_rand)))
rownames(tt) = c("count_checks_our","count_checks_Wil","count_checks_rand")
tt[1,] = round(table(dat$nr_checks_our)/length(filenames))
tt[2,] = round(table(dat$nr_checks_Wil)/length(filenames))
tt[3,] = round(table(dat$nr_checks_rand)/length(filenames))
colnames(tt) = names(table(dat$nr_checks_rand))
print(tt)
@

\end{document}
